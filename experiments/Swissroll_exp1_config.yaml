architecture:
  type: "TorusAE"                  # Type of architecture being used
  latent_dim: 2                    # latent space dimension
  input_dim: 3                     # input dimension
  output_dim: 3                    # output dimension

dataset:
  name:  "Swissroll"
  n: 18000                         # number of dataset points
  swissroll_noise: 1.e-06          # only for Swissroll

experiment:        
  weights_loaded_from: False        # Path to another experiment from which weights are loaded
  name: "Swissroll_exp1"           # number of the current experiment. Determines the folder name with experiment results in "../experiments/[experiment_name]"

training_mode:         
  diagnostic_mode: False            # Diagnostic mode flag: printing all losses plots. 
  compute_curvature: True          # Flag to indicate whether to compute curvature
  compute_contractive_loss: True # Flag to indicate whether to compute contractive loss
  OOD_regime: False                # Out-of-distribution regime on/off flag


loss_settings:
  lambda_recon: 1.0                # Weight for reconstruction (mean squared) error in the loss function
  lambda_unif: 1.0                 # Weight for week convergence to uniform distribution in the loss function
  lambda_curv: 0.5e-4               # Weight for curvature regularization
  lambda_contractive_encoder: 2.0  # Weight for contractive encoder
         
  num_moments: 2                   # Number of empirical moments of the distribution penalized in the loss function
  delta_encoder: 0.5               # Threshold parameter for the encoder Frobenius norm
  eps: 0.1                         # Regularization parameter for inverse of metric computation (involved in Scalar curvature computation)

optimizer_settings:       
  lr: 0.001                       # Learning rate for the optimizer
  num_epochs: 3                    # Number of epochs for training
  weight_decay: 0.0                # Weight decay for the optimizer
       
data_loader_settings:       
  batch_size: 128                  # Batch size 
  split_ratio: 0.2                 # Ratio for splitting the data into training and validation
  random_shuffling: false          # Flag to indicate whether to shuffle data randomly
  random_seed: 0                   # Seed for random number generation